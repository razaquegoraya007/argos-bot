/*************************************************************************
* ADOBE CONFIDENTIAL
* ___________________
*
*  Copyright 2015 Adobe Systems Incorporated
*  All Rights Reserved.
*
* NOTICE:  All information contained herein is, and remains
* the property of Adobe Systems Incorporated and its suppliers,
* if any.  The intellectual and technical concepts contained
* herein are proprietary to Adobe Systems Incorporated and its
* suppliers and are protected by all applicable intellectual property laws,
* including trade secret and or copyright laws.
* Dissemination of this information or reproduction of this material
* is strictly forbidden unless prior written permission is obtained
* from Adobe Systems Incorporated.
**************************************************************************/
import{getElementBasedOnSelector,getFileDetailsElementInNativeViewer,createAcrobatIconElement,sendAnalytics,createURLForAttachment,isOrphanContentScript}from"./util.js";import{createFteTooltip,shouldShowFteTooltip,updateFteToolTipCoolDown,acrobatTouchPointClicked,getAcrobatTouchPointFteEligibility,removeGsuiteFteTooltip}from"../gsuite/fte-utils.js";import state from"./state.js";const NATIVE_VIEWER_PROMPT_CLASS="acrobat-native-viewer-prompt",GMAIL_FTE_TOOLTIP_STORAGE_KEY="acrobat-gmail-fte-config",GMAIL_FTE_TOOLTIP_CONTAINER_CLASS="acrobat-fte-tooltip-container",hideNativeViewerPrompt=e=>{if(!state.nativeViewerPromptState?.nativeViewerPromptVisible&&!e)return;const t=document.getElementsByClassName(NATIVE_VIEWER_PROMPT_CLASS);t&&t[0]&&t[0].parentElement.removeChild(t[0]),state.nativeViewerPromptState.nativeViewerPromptVisible=!1},createNativeViewPromptTextElement=()=>{const e=document.createElement("span");return e.setAttribute("class","acrobat-native-viewer-prompt-text"),e.textContent=state?.gmailConfig?.acrobatPromptText||"Open with Acrobat",e},getParentElementForNativeViewerPrompt=()=>getElementBasedOnSelector(document,"nativeViewerPromptParentElement","nativeViewer"),getAnalyticsType=e=>"LIST_VIEW"===e?"NativeViewerPromptLV":"NativeViewerPrompt",createNativeViewerPrompt=(e,t,i)=>{const o=document.createElement("a"),a=createAcrobatIconElement(),r=createNativeViewPromptTextElement(),n=createURLForAttachment(e,"GmailNativeViewer",t);return o.setAttribute("class",NATIVE_VIEWER_PROMPT_CLASS),o.setAttribute("href",n),o.setAttribute("target","_blank"),o.appendChild(a),o.appendChild(r),o.addEventListener("click",(()=>{const e=getAnalyticsType(i);sendAnalytics([[`DCBrowserExt:Gmail:${e}:Clicked`,{gsuiteFte:getAcrobatTouchPointFteEligibility(state?.gmailConfig?.enableGmailFteToolTip)}]]),acrobatTouchPointClicked("acrobat-gmail-fte-config"),state.fteToolTip.lastGmailFteShown.type="",state.fteToolTip.touchPointClicked=!0})),o},processForAlreadyShownNativeViewerPrompt=()=>{const{nativeViewerPromptVisible:e,previousFileDetailsElement:t,nativeViewerAttachmentURL:i}=state?.nativeViewerPromptState;if(e){const e=getFileDetailsElementInNativeViewer();e?e!==t&&hideNativeViewerPrompt():(state.nativeViewerPromptState.previousFileDetailsElement=null,state.nativeViewerPromptState.nativeViewerAttachmentURL=null,hideNativeViewerPrompt())}else if(t&&!isOrphanContentScript()){const e=getFileDetailsElementInNativeViewer();e&&t===e&&addAcrobatPromptInNativeViewer(i)}},removeFteTooltipFromAttachmentDiv=()=>{removeGsuiteFteTooltip(),state.fteToolTip.lastGmailFteShown.type=""},handleFteClickOutside=(e,t)=>{document.getElementsByClassName("acrobat-fte-tooltip-container").length>0&&(t.contains(e.target)||(sendAnalytics(["DCBrowserExt:GmailFTE:NativeView:Dismissed"]),removeFteTooltipFromAttachmentDiv(),document.removeEventListener("click",handleFteClickOutside)))},addFteTooltipButtonEventListener=e=>{e.querySelector(".acrobat-fte-tooltip-button").addEventListener("click",(()=>{removeFteTooltipFromAttachmentDiv(),sendAnalytics(["DCBrowserExt:GmailFTE:NativeView:Clicked"]),document.removeEventListener("click",handleFteClickOutside)}))},handleAcrobatTouchPointClickForFte=()=>{document.getElementsByClassName("acrobat-fte-tooltip-container").length>0&&(removeFteTooltipFromAttachmentDiv(),document.removeEventListener("click",handleFteClickOutside))},addFteTooltipToAttachmentDiv=e=>{const t=createFteTooltip(state?.gmailConfig?.gmailFteToolTipStrings,"nativeView");addFteTooltipButtonEventListener(t),document.addEventListener("click",(e=>handleFteClickOutside(e,t)),{once:!0}),e.addEventListener("click",(()=>handleAcrobatTouchPointClickForFte()),{once:!0}),state.fteToolTip.lastGmailFteShown.type="nativeView",e.appendChild(t),sendAnalytics(["DCBrowserExt:GmailFTE:NativeView:Shown"]),updateFteToolTipCoolDown(state?.gmailConfig?.gmailFteToolTipConfig?.tooltip,"acrobat-gmail-fte-config")},addAcrobatPromptInNativeViewer=(e,t,i)=>{try{const{nativeViewerPromptVisible:o}=state?.nativeViewerPromptState;if(o)return;const a=createNativeViewerPrompt(e,t,i),r=getParentElementForNativeViewerPrompt();if(r&&r?.childNodes?.length>0){if(r.insertBefore(a,r.childNodes[0]),state.nativeViewerPromptState.nativeViewerPromptVisible=!0,state.nativeViewerPromptState.nativeViewerAttachmentURL=e,state.nativeViewerPromptState.previousFileDetailsElement=getFileDetailsElementInNativeViewer(),window.innerWidth>1200){const e=state?.gmailConfig?.gmailFteToolTipConfig?.tooltip;shouldShowFteTooltip(e,state?.fteToolTip,"acrobat-gmail-fte-config").then((e=>{e&&addFteTooltipToAttachmentDiv(a)}));const t=getAnalyticsType(i);sendAnalytics([[`DCBrowserExt:Gmail:${t}:Shown`]])}}else hideNativeViewerPrompt()}catch(e){hideNativeViewerPrompt()}},getFileDetails=e=>{try{return JSON.parse(e?.textContent?.replace(/\\/g,""))}catch(e){return null}},processForNativeViewer=(e,t)=>{const i=getFileDetailsElementInNativeViewer();if(i&&!isOrphanContentScript()){const o=getFileDetails(i);if(e?.name&&o&&e?.name!==o.title)return;addAcrobatPromptInNativeViewer(e?.url,o.title,t)}else hideNativeViewerPrompt()},sendAnalyticsIfNativeViewerLaunched=e=>{getFileDetailsElementInNativeViewer()&&sendAnalytics([[`DCBrowserExt:Gmail:NativeViewerLV:${e}`]])},removeAllTouchPoints=()=>{hideNativeViewerPrompt(!0)};export{processForAlreadyShownNativeViewerPrompt,sendAnalyticsIfNativeViewerLaunched,processForNativeViewer,removeAllTouchPoints};